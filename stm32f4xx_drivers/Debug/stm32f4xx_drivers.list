
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000894  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a58  08000a60  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a58  08000a58  00010a60  2**0
                  CONTENTS
  4 .ARM          00000000  08000a58  08000a58  00010a60  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a58  08000a60  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a58  08000a58  00010a58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a5c  08000a5c  00010a5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a60  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a60  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010a60  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011a4  00000000  00000000  00010a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000316  00000000  00000000  00011c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011f50  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00012018  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002233  00000000  00000000  000120b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000cd4  00000000  00000000  000142eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000098f8  00000000  00000000  00014fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001e8b7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001e934  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000a40 	.word	0x08000a40

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000a40 	.word	0x08000a40

08000204 <delay>:
#include <stdio.h>
#include <string.h>
#include "stm32f446xx.h"

void delay(void){
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
	// 200ms delay when system clock in 16Mz
	for(uint32_t i=0; i<=500000; i++);
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
 800020e:	e002      	b.n	8000216 <delay+0x12>
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	3301      	adds	r3, #1
 8000214:	607b      	str	r3, [r7, #4]
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a04      	ldr	r2, [pc, #16]	; (800022c <delay+0x28>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d9f8      	bls.n	8000210 <delay+0xc>
}
 800021e:	bf00      	nop
 8000220:	370c      	adds	r7, #12
 8000222:	46bd      	mov	sp, r7
 8000224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	0007a120 	.word	0x0007a120

08000230 <main>:

int main(void){
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioInput, GpioLed;
	memset(&GpioInput, 0, sizeof(GpioInput));
 8000236:	f107 030c 	add.w	r3, r7, #12
 800023a:	220c      	movs	r2, #12
 800023c:	2100      	movs	r1, #0
 800023e:	4618      	mov	r0, r3
 8000240:	f000 fbf6 	bl	8000a30 <memset>
	memset(&GpioLed, 0, sizeof(GpioLed));
 8000244:	463b      	mov	r3, r7
 8000246:	220c      	movs	r2, #12
 8000248:	2100      	movs	r1, #0
 800024a:	4618      	mov	r0, r3
 800024c:	f000 fbf0 	bl	8000a30 <memset>

	GpioInput.pGPIOx = GPIOB;
 8000250:	4b15      	ldr	r3, [pc, #84]	; (80002a8 <main+0x78>)
 8000252:	60fb      	str	r3, [r7, #12]
	GpioInput.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000254:	2305      	movs	r3, #5
 8000256:	743b      	strb	r3, [r7, #16]
	GpioInput.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000258:	2305      	movs	r3, #5
 800025a:	747b      	strb	r3, [r7, #17]
	GpioInput.GPIO_PinConfig.GPIO_PinSpeed = GPIO_PIN_SPEED_MEDIUM;
 800025c:	2301      	movs	r3, #1
 800025e:	74bb      	strb	r3, [r7, #18]
	GpioInput.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000260:	2301      	movs	r3, #1
 8000262:	74fb      	strb	r3, [r7, #19]

	GpioLed.pGPIOx = GPIOB;
 8000264:	4b10      	ldr	r3, [pc, #64]	; (80002a8 <main+0x78>)
 8000266:	603b      	str	r3, [r7, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_4;
 8000268:	2304      	movs	r3, #4
 800026a:	713b      	strb	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800026c:	2301      	movs	r3, #1
 800026e:	717b      	strb	r3, [r7, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_PIN_SPEED_MEDIUM;
 8000270:	2301      	movs	r3, #1
 8000272:	71bb      	strb	r3, [r7, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinOPtype = GPIO_OP_TYPE_PP;
 8000274:	2300      	movs	r3, #0
 8000276:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000278:	2300      	movs	r3, #0
 800027a:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOB, ENABLE);
 800027c:	2101      	movs	r1, #1
 800027e:	480a      	ldr	r0, [pc, #40]	; (80002a8 <main+0x78>)
 8000280:	f000 f854 	bl	800032c <GPIO_PeriClockControl>
	GPIO_Init(&GpioInput);
 8000284:	f107 030c 	add.w	r3, r7, #12
 8000288:	4618      	mov	r0, r3
 800028a:	f000 f91f 	bl	80004cc <GPIO_Init>
	GPIO_Init(&GpioLed);
 800028e:	463b      	mov	r3, r7
 8000290:	4618      	mov	r0, r3
 8000292:	f000 f91b 	bl	80004cc <GPIO_Init>

	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 8000296:	2101      	movs	r1, #1
 8000298:	2017      	movs	r0, #23
 800029a:	f000 fad5 	bl	8000848 <GPIO_IRQInterruptConfig>
	GPIO_ITQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRI15);
 800029e:	210f      	movs	r1, #15
 80002a0:	2017      	movs	r0, #23
 80002a2:	f000 fb53 	bl	800094c <GPIO_ITQPriorityConfig>

	while(1);
 80002a6:	e7fe      	b.n	80002a6 <main+0x76>
 80002a8:	40020400 	.word	0x40020400

080002ac <EXTI9_5_IRQHandler>:

	return 0;
}

void EXTI9_5_IRQHandler(void){
 80002ac:	b580      	push	{r7, lr}
 80002ae:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_5);
 80002b0:	2005      	movs	r0, #5
 80002b2:	f000 fb79 	bl	80009a8 <GPIO_IRQHandling>
	GPIO_WriteToOutputPin(GPIOB, GPIO_PIN_NO_4, 1);
 80002b6:	2201      	movs	r2, #1
 80002b8:	2104      	movs	r1, #4
 80002ba:	4806      	ldr	r0, [pc, #24]	; (80002d4 <EXTI9_5_IRQHandler+0x28>)
 80002bc:	f000 fa9e 	bl	80007fc <GPIO_WriteToOutputPin>
	delay();
 80002c0:	f7ff ffa0 	bl	8000204 <delay>
	GPIO_WriteToOutputPin(GPIOB, GPIO_PIN_NO_4, 0);
 80002c4:	2200      	movs	r2, #0
 80002c6:	2104      	movs	r1, #4
 80002c8:	4802      	ldr	r0, [pc, #8]	; (80002d4 <EXTI9_5_IRQHandler+0x28>)
 80002ca:	f000 fa97 	bl	80007fc <GPIO_WriteToOutputPin>
}
 80002ce:	bf00      	nop
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	bf00      	nop
 80002d4:	40020400 	.word	0x40020400

080002d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d8:	480d      	ldr	r0, [pc, #52]	; (8000310 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002da:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e0:	480c      	ldr	r0, [pc, #48]	; (8000314 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e2:	490d      	ldr	r1, [pc, #52]	; (8000318 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e4:	4a0d      	ldr	r2, [pc, #52]	; (800031c <LoopForever+0xe>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e8:	e002      	b.n	80002f0 <LoopCopyDataInit>

080002ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ee:	3304      	adds	r3, #4

080002f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f4:	d3f9      	bcc.n	80002ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002f6:	4a0a      	ldr	r2, [pc, #40]	; (8000320 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f8:	4c0a      	ldr	r4, [pc, #40]	; (8000324 <LoopForever+0x16>)
  movs r3, #0
 80002fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002fc:	e001      	b.n	8000302 <LoopFillZerobss>

080002fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000300:	3204      	adds	r2, #4

08000302 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000302:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000304:	d3fb      	bcc.n	80002fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000306:	f000 fb6f 	bl	80009e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030a:	f7ff ff91 	bl	8000230 <main>

0800030e <LoopForever>:

LoopForever:
    b LoopForever
 800030e:	e7fe      	b.n	800030e <LoopForever>
  ldr   r0, =_estack
 8000310:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000314:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000318:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800031c:	08000a60 	.word	0x08000a60
  ldr r2, =_sbss
 8000320:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000324:	2000001c 	.word	0x2000001c

08000328 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000328:	e7fe      	b.n	8000328 <ADC_IRQHandler>
	...

0800032c <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 ***********************************************************************/

void GPIO_PeriClockControl(GPIO_Regdef_t *pGPIOx, uint8_t ENorDI){
 800032c:	b480      	push	{r7}
 800032e:	b083      	sub	sp, #12
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
 8000334:	460b      	mov	r3, r1
 8000336:	70fb      	strb	r3, [r7, #3]
	if(ENorDI == ENABLE){
 8000338:	78fb      	ldrb	r3, [r7, #3]
 800033a:	2b01      	cmp	r3, #1
 800033c:	d157      	bne.n	80003ee <GPIO_PeriClockControl+0xc2>
		if(pGPIOx == GPIOA){
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a59      	ldr	r2, [pc, #356]	; (80004a8 <GPIO_PeriClockControl+0x17c>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 8000346:	4b59      	ldr	r3, [pc, #356]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a58      	ldr	r2, [pc, #352]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800034c:	f043 0301 	orr.w	r3, r3, #1
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOG_PCLK_DI();
		} else if(pGPIOx == GPIOH){
			GPIOH_PCLK_DI();
		}
	}
}
 8000352:	e0a3      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB){
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a56      	ldr	r2, [pc, #344]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800035c:	4b53      	ldr	r3, [pc, #332]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000360:	4a52      	ldr	r2, [pc, #328]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000362:	f043 0302 	orr.w	r3, r3, #2
 8000366:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000368:	e098      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC){
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a51      	ldr	r2, [pc, #324]	; (80004b4 <GPIO_PeriClockControl+0x188>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 8000372:	4b4e      	ldr	r3, [pc, #312]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000376:	4a4d      	ldr	r2, [pc, #308]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000378:	f043 0304 	orr.w	r3, r3, #4
 800037c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037e:	e08d      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD){
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a4d      	ldr	r2, [pc, #308]	; (80004b8 <GPIO_PeriClockControl+0x18c>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000388:	4b48      	ldr	r3, [pc, #288]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038c:	4a47      	ldr	r2, [pc, #284]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800038e:	f043 0308 	orr.w	r3, r3, #8
 8000392:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000394:	e082      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE){
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a48      	ldr	r2, [pc, #288]	; (80004bc <GPIO_PeriClockControl+0x190>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800039e:	4b43      	ldr	r3, [pc, #268]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a2:	4a42      	ldr	r2, [pc, #264]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003a4:	f043 0310 	orr.w	r3, r3, #16
 80003a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003aa:	e077      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF){
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a44      	ldr	r2, [pc, #272]	; (80004c0 <GPIO_PeriClockControl+0x194>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d106      	bne.n	80003c2 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003b4:	4b3d      	ldr	r3, [pc, #244]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b8:	4a3c      	ldr	r2, [pc, #240]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003ba:	f043 0320 	orr.w	r3, r3, #32
 80003be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c0:	e06c      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG){
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a3f      	ldr	r2, [pc, #252]	; (80004c4 <GPIO_PeriClockControl+0x198>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003ca:	4b38      	ldr	r3, [pc, #224]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ce:	4a37      	ldr	r2, [pc, #220]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d6:	e061      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH){
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a3b      	ldr	r2, [pc, #236]	; (80004c8 <GPIO_PeriClockControl+0x19c>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d15d      	bne.n	800049c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003e0:	4b32      	ldr	r3, [pc, #200]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e4:	4a31      	ldr	r2, [pc, #196]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003e6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ec:	e056      	b.n	800049c <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA){
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a2d      	ldr	r2, [pc, #180]	; (80004a8 <GPIO_PeriClockControl+0x17c>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80003f6:	4b2d      	ldr	r3, [pc, #180]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fa:	4a2c      	ldr	r2, [pc, #176]	; (80004ac <GPIO_PeriClockControl+0x180>)
 80003fc:	f023 0301 	bic.w	r3, r3, #1
 8000400:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000402:	e04b      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOB){
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a2a      	ldr	r2, [pc, #168]	; (80004b0 <GPIO_PeriClockControl+0x184>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 800040c:	4b27      	ldr	r3, [pc, #156]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000410:	4a26      	ldr	r2, [pc, #152]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000412:	f023 0302 	bic.w	r3, r3, #2
 8000416:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000418:	e040      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOC){
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a25      	ldr	r2, [pc, #148]	; (80004b4 <GPIO_PeriClockControl+0x188>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 8000422:	4b22      	ldr	r3, [pc, #136]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000426:	4a21      	ldr	r2, [pc, #132]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000428:	f023 0304 	bic.w	r3, r3, #4
 800042c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042e:	e035      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOD){
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a21      	ldr	r2, [pc, #132]	; (80004b8 <GPIO_PeriClockControl+0x18c>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d106      	bne.n	8000446 <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000438:	4b1c      	ldr	r3, [pc, #112]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043c:	4a1b      	ldr	r2, [pc, #108]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800043e:	f023 0308 	bic.w	r3, r3, #8
 8000442:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000444:	e02a      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOE){
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4a1c      	ldr	r2, [pc, #112]	; (80004bc <GPIO_PeriClockControl+0x190>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d106      	bne.n	800045c <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 800044e:	4b17      	ldr	r3, [pc, #92]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000450:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000452:	4a16      	ldr	r2, [pc, #88]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000454:	f023 0310 	bic.w	r3, r3, #16
 8000458:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045a:	e01f      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOF){
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	4a18      	ldr	r2, [pc, #96]	; (80004c0 <GPIO_PeriClockControl+0x194>)
 8000460:	4293      	cmp	r3, r2
 8000462:	d106      	bne.n	8000472 <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 8000464:	4b11      	ldr	r3, [pc, #68]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000466:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000468:	4a10      	ldr	r2, [pc, #64]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800046a:	f023 0320 	bic.w	r3, r3, #32
 800046e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000470:	e014      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOG){
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	4a13      	ldr	r2, [pc, #76]	; (80004c4 <GPIO_PeriClockControl+0x198>)
 8000476:	4293      	cmp	r3, r2
 8000478:	d106      	bne.n	8000488 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 800047a:	4b0c      	ldr	r3, [pc, #48]	; (80004ac <GPIO_PeriClockControl+0x180>)
 800047c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047e:	4a0b      	ldr	r2, [pc, #44]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000480:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000484:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000486:	e009      	b.n	800049c <GPIO_PeriClockControl+0x170>
		} else if(pGPIOx == GPIOH){
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	4a0f      	ldr	r2, [pc, #60]	; (80004c8 <GPIO_PeriClockControl+0x19c>)
 800048c:	4293      	cmp	r3, r2
 800048e:	d105      	bne.n	800049c <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000490:	4b06      	ldr	r3, [pc, #24]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000494:	4a05      	ldr	r2, [pc, #20]	; (80004ac <GPIO_PeriClockControl+0x180>)
 8000496:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800049a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800049c:	bf00      	nop
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr
 80004a8:	40020000 	.word	0x40020000
 80004ac:	40023800 	.word	0x40023800
 80004b0:	40020400 	.word	0x40020400
 80004b4:	40020800 	.word	0x40020800
 80004b8:	40020c00 	.word	0x40020c00
 80004bc:	40021000 	.word	0x40021000
 80004c0:	40021400 	.word	0x40021400
 80004c4:	40021800 	.word	0x40021800
 80004c8:	40021c00 	.word	0x40021c00

080004cc <GPIO_Init>:
 * @return            -
 *
 * @Note              -
 ***********************************************************************/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80004cc:	b480      	push	{r7}
 80004ce:	b087      	sub	sp, #28
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	6078      	str	r0, [r7, #4]
	// configure mode of gpio
	uint32_t temp = 0;
 80004d4:	2300      	movs	r3, #0
 80004d6:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG){
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	2b03      	cmp	r3, #3
 80004de:	d820      	bhi.n	8000522 <GPIO_Init+0x56>
		// non-interrupt mode
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	795b      	ldrb	r3, [r3, #5]
 80004e4:	461a      	mov	r2, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	791b      	ldrb	r3, [r3, #4]
 80004ea:	005b      	lsls	r3, r3, #1
 80004ec:	fa02 f303 	lsl.w	r3, r2, r3
 80004f0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	681a      	ldr	r2, [r3, #0]
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	791b      	ldrb	r3, [r3, #4]
 80004fc:	005b      	lsls	r3, r3, #1
 80004fe:	2103      	movs	r1, #3
 8000500:	fa01 f303 	lsl.w	r3, r1, r3
 8000504:	43db      	mvns	r3, r3
 8000506:	4619      	mov	r1, r3
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	400a      	ands	r2, r1
 800050e:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	6819      	ldr	r1, [r3, #0]
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	697a      	ldr	r2, [r7, #20]
 800051c:	430a      	orrs	r2, r1
 800051e:	601a      	str	r2, [r3, #0]
 8000520:	e0c2      	b.n	80006a8 <GPIO_Init+0x1dc>
	} else{
		// interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	795b      	ldrb	r3, [r3, #5]
 8000526:	2b04      	cmp	r3, #4
 8000528:	d117      	bne.n	800055a <GPIO_Init+0x8e>
			// 1.Configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052a:	4b47      	ldr	r3, [pc, #284]	; (8000648 <GPIO_Init+0x17c>)
 800052c:	68db      	ldr	r3, [r3, #12]
 800052e:	687a      	ldr	r2, [r7, #4]
 8000530:	7912      	ldrb	r2, [r2, #4]
 8000532:	4611      	mov	r1, r2
 8000534:	2201      	movs	r2, #1
 8000536:	408a      	lsls	r2, r1
 8000538:	4611      	mov	r1, r2
 800053a:	4a43      	ldr	r2, [pc, #268]	; (8000648 <GPIO_Init+0x17c>)
 800053c:	430b      	orrs	r3, r1
 800053e:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000540:	4b41      	ldr	r3, [pc, #260]	; (8000648 <GPIO_Init+0x17c>)
 8000542:	689b      	ldr	r3, [r3, #8]
 8000544:	687a      	ldr	r2, [r7, #4]
 8000546:	7912      	ldrb	r2, [r2, #4]
 8000548:	4611      	mov	r1, r2
 800054a:	2201      	movs	r2, #1
 800054c:	408a      	lsls	r2, r1
 800054e:	43d2      	mvns	r2, r2
 8000550:	4611      	mov	r1, r2
 8000552:	4a3d      	ldr	r2, [pc, #244]	; (8000648 <GPIO_Init+0x17c>)
 8000554:	400b      	ands	r3, r1
 8000556:	6093      	str	r3, [r2, #8]
 8000558:	e035      	b.n	80005c6 <GPIO_Init+0xfa>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	795b      	ldrb	r3, [r3, #5]
 800055e:	2b05      	cmp	r3, #5
 8000560:	d117      	bne.n	8000592 <GPIO_Init+0xc6>
			// 1.Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000562:	4b39      	ldr	r3, [pc, #228]	; (8000648 <GPIO_Init+0x17c>)
 8000564:	689b      	ldr	r3, [r3, #8]
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	7912      	ldrb	r2, [r2, #4]
 800056a:	4611      	mov	r1, r2
 800056c:	2201      	movs	r2, #1
 800056e:	408a      	lsls	r2, r1
 8000570:	4611      	mov	r1, r2
 8000572:	4a35      	ldr	r2, [pc, #212]	; (8000648 <GPIO_Init+0x17c>)
 8000574:	430b      	orrs	r3, r1
 8000576:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000578:	4b33      	ldr	r3, [pc, #204]	; (8000648 <GPIO_Init+0x17c>)
 800057a:	68db      	ldr	r3, [r3, #12]
 800057c:	687a      	ldr	r2, [r7, #4]
 800057e:	7912      	ldrb	r2, [r2, #4]
 8000580:	4611      	mov	r1, r2
 8000582:	2201      	movs	r2, #1
 8000584:	408a      	lsls	r2, r1
 8000586:	43d2      	mvns	r2, r2
 8000588:	4611      	mov	r1, r2
 800058a:	4a2f      	ldr	r2, [pc, #188]	; (8000648 <GPIO_Init+0x17c>)
 800058c:	400b      	ands	r3, r1
 800058e:	60d3      	str	r3, [r2, #12]
 8000590:	e019      	b.n	80005c6 <GPIO_Init+0xfa>
		} else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	795b      	ldrb	r3, [r3, #5]
 8000596:	2b06      	cmp	r3, #6
 8000598:	d115      	bne.n	80005c6 <GPIO_Init+0xfa>
			// 1.Configure FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800059a:	4b2b      	ldr	r3, [pc, #172]	; (8000648 <GPIO_Init+0x17c>)
 800059c:	68db      	ldr	r3, [r3, #12]
 800059e:	687a      	ldr	r2, [r7, #4]
 80005a0:	7912      	ldrb	r2, [r2, #4]
 80005a2:	4611      	mov	r1, r2
 80005a4:	2201      	movs	r2, #1
 80005a6:	408a      	lsls	r2, r1
 80005a8:	4611      	mov	r1, r2
 80005aa:	4a27      	ldr	r2, [pc, #156]	; (8000648 <GPIO_Init+0x17c>)
 80005ac:	430b      	orrs	r3, r1
 80005ae:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b0:	4b25      	ldr	r3, [pc, #148]	; (8000648 <GPIO_Init+0x17c>)
 80005b2:	689b      	ldr	r3, [r3, #8]
 80005b4:	687a      	ldr	r2, [r7, #4]
 80005b6:	7912      	ldrb	r2, [r2, #4]
 80005b8:	4611      	mov	r1, r2
 80005ba:	2201      	movs	r2, #1
 80005bc:	408a      	lsls	r2, r1
 80005be:	4611      	mov	r1, r2
 80005c0:	4a21      	ldr	r2, [pc, #132]	; (8000648 <GPIO_Init+0x17c>)
 80005c2:	430b      	orrs	r3, r1
 80005c4:	6093      	str	r3, [r2, #8]
		}

		// 2.Configure the gpio port section in SYSCFG_EXTICR
		uint8_t temp3, temp4;
		temp3 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	089b      	lsrs	r3, r3, #2
 80005cc:	74fb      	strb	r3, [r7, #19]
		temp4 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	f003 0303 	and.w	r3, r3, #3
 80005d6:	74bb      	strb	r3, [r7, #18]
		SYSCFG_PCLK_EN();
 80005d8:	4b1c      	ldr	r3, [pc, #112]	; (800064c <GPIO_Init+0x180>)
 80005da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005dc:	4a1b      	ldr	r2, [pc, #108]	; (800064c <GPIO_Init+0x180>)
 80005de:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005e2:	6453      	str	r3, [r2, #68]	; 0x44
		uint8_t extiPortNum = GPIO_BASE_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	4a19      	ldr	r2, [pc, #100]	; (8000650 <GPIO_Init+0x184>)
 80005ea:	4293      	cmp	r3, r2
 80005ec:	d03e      	beq.n	800066c <GPIO_Init+0x1a0>
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	4a18      	ldr	r2, [pc, #96]	; (8000654 <GPIO_Init+0x188>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d024      	beq.n	8000642 <GPIO_Init+0x176>
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	4a16      	ldr	r2, [pc, #88]	; (8000658 <GPIO_Init+0x18c>)
 80005fe:	4293      	cmp	r3, r2
 8000600:	d01d      	beq.n	800063e <GPIO_Init+0x172>
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	4a15      	ldr	r2, [pc, #84]	; (800065c <GPIO_Init+0x190>)
 8000608:	4293      	cmp	r3, r2
 800060a:	d016      	beq.n	800063a <GPIO_Init+0x16e>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	4a13      	ldr	r2, [pc, #76]	; (8000660 <GPIO_Init+0x194>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d00f      	beq.n	8000636 <GPIO_Init+0x16a>
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	4a12      	ldr	r2, [pc, #72]	; (8000664 <GPIO_Init+0x198>)
 800061c:	4293      	cmp	r3, r2
 800061e:	d008      	beq.n	8000632 <GPIO_Init+0x166>
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a10      	ldr	r2, [pc, #64]	; (8000668 <GPIO_Init+0x19c>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d101      	bne.n	800062e <GPIO_Init+0x162>
 800062a:	2306      	movs	r3, #6
 800062c:	e01f      	b.n	800066e <GPIO_Init+0x1a2>
 800062e:	2300      	movs	r3, #0
 8000630:	e01d      	b.n	800066e <GPIO_Init+0x1a2>
 8000632:	2305      	movs	r3, #5
 8000634:	e01b      	b.n	800066e <GPIO_Init+0x1a2>
 8000636:	2304      	movs	r3, #4
 8000638:	e019      	b.n	800066e <GPIO_Init+0x1a2>
 800063a:	2303      	movs	r3, #3
 800063c:	e017      	b.n	800066e <GPIO_Init+0x1a2>
 800063e:	2302      	movs	r3, #2
 8000640:	e015      	b.n	800066e <GPIO_Init+0x1a2>
 8000642:	2301      	movs	r3, #1
 8000644:	e013      	b.n	800066e <GPIO_Init+0x1a2>
 8000646:	bf00      	nop
 8000648:	40013c00 	.word	0x40013c00
 800064c:	40023800 	.word	0x40023800
 8000650:	40020000 	.word	0x40020000
 8000654:	40020400 	.word	0x40020400
 8000658:	40020800 	.word	0x40020800
 800065c:	40020c00 	.word	0x40020c00
 8000660:	40021000 	.word	0x40021000
 8000664:	40021400 	.word	0x40021400
 8000668:	40021800 	.word	0x40021800
 800066c:	2300      	movs	r3, #0
 800066e:	747b      	strb	r3, [r7, #17]
		SYSCFG->EXTICR[temp3] |= (extiPortNum << (temp4*4));
 8000670:	4a60      	ldr	r2, [pc, #384]	; (80007f4 <GPIO_Init+0x328>)
 8000672:	7cfb      	ldrb	r3, [r7, #19]
 8000674:	3302      	adds	r3, #2
 8000676:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800067a:	7c79      	ldrb	r1, [r7, #17]
 800067c:	7cbb      	ldrb	r3, [r7, #18]
 800067e:	009b      	lsls	r3, r3, #2
 8000680:	fa01 f303 	lsl.w	r3, r1, r3
 8000684:	4618      	mov	r0, r3
 8000686:	495b      	ldr	r1, [pc, #364]	; (80007f4 <GPIO_Init+0x328>)
 8000688:	7cfb      	ldrb	r3, [r7, #19]
 800068a:	4302      	orrs	r2, r0
 800068c:	3302      	adds	r3, #2
 800068e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3. enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000692:	4b59      	ldr	r3, [pc, #356]	; (80007f8 <GPIO_Init+0x32c>)
 8000694:	681b      	ldr	r3, [r3, #0]
 8000696:	687a      	ldr	r2, [r7, #4]
 8000698:	7912      	ldrb	r2, [r2, #4]
 800069a:	4611      	mov	r1, r2
 800069c:	2201      	movs	r2, #1
 800069e:	408a      	lsls	r2, r1
 80006a0:	4611      	mov	r1, r2
 80006a2:	4a55      	ldr	r2, [pc, #340]	; (80007f8 <GPIO_Init+0x32c>)
 80006a4:	430b      	orrs	r3, r1
 80006a6:	6013      	str	r3, [r2, #0]
	}

	// configure the speed
	temp = 0;
 80006a8:	2300      	movs	r3, #0
 80006aa:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	799b      	ldrb	r3, [r3, #6]
 80006b0:	461a      	mov	r2, r3
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	791b      	ldrb	r3, [r3, #4]
 80006b6:	005b      	lsls	r3, r3, #1
 80006b8:	fa02 f303 	lsl.w	r3, r2, r3
 80006bc:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	689a      	ldr	r2, [r3, #8]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	791b      	ldrb	r3, [r3, #4]
 80006c8:	005b      	lsls	r3, r3, #1
 80006ca:	2103      	movs	r1, #3
 80006cc:	fa01 f303 	lsl.w	r3, r1, r3
 80006d0:	43db      	mvns	r3, r3
 80006d2:	4619      	mov	r1, r3
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	400a      	ands	r2, r1
 80006da:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	6899      	ldr	r1, [r3, #8]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	697a      	ldr	r2, [r7, #20]
 80006e8:	430a      	orrs	r2, r1
 80006ea:	609a      	str	r2, [r3, #8]

	// configure the pupd settings
	temp = 0;
 80006ec:	2300      	movs	r3, #0
 80006ee:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	79db      	ldrb	r3, [r3, #7]
 80006f4:	461a      	mov	r2, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	791b      	ldrb	r3, [r3, #4]
 80006fa:	005b      	lsls	r3, r3, #1
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	681b      	ldr	r3, [r3, #0]
 8000706:	68da      	ldr	r2, [r3, #12]
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	791b      	ldrb	r3, [r3, #4]
 800070c:	005b      	lsls	r3, r3, #1
 800070e:	2103      	movs	r1, #3
 8000710:	fa01 f303 	lsl.w	r3, r1, r3
 8000714:	43db      	mvns	r3, r3
 8000716:	4619      	mov	r1, r3
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	681b      	ldr	r3, [r3, #0]
 800071c:	400a      	ands	r2, r1
 800071e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000720:	687b      	ldr	r3, [r7, #4]
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	68d9      	ldr	r1, [r3, #12]
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	697a      	ldr	r2, [r7, #20]
 800072c:	430a      	orrs	r2, r1
 800072e:	60da      	str	r2, [r3, #12]

	// configure the output type
	temp = 0;
 8000730:	2300      	movs	r3, #0
 8000732:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPtype << (1*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	7a1b      	ldrb	r3, [r3, #8]
 8000738:	461a      	mov	r2, r3
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	791b      	ldrb	r3, [r3, #4]
 800073e:	fa02 f303 	lsl.w	r3, r2, r3
 8000742:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	685a      	ldr	r2, [r3, #4]
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	791b      	ldrb	r3, [r3, #4]
 800074e:	4619      	mov	r1, r3
 8000750:	2301      	movs	r3, #1
 8000752:	408b      	lsls	r3, r1
 8000754:	43db      	mvns	r3, r3
 8000756:	4619      	mov	r1, r3
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	400a      	ands	r2, r1
 800075e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	6859      	ldr	r1, [r3, #4]
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	697a      	ldr	r2, [r7, #20]
 800076c:	430a      	orrs	r2, r1
 800076e:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALT_FUN){
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	795b      	ldrb	r3, [r3, #5]
 8000774:	2b02      	cmp	r3, #2
 8000776:	d136      	bne.n	80007e6 <GPIO_Init+0x31a>
		// configure alt function mode
		uint32_t temp1 = 0, temp2 = 0;
 8000778:	2300      	movs	r3, #0
 800077a:	60fb      	str	r3, [r7, #12]
 800077c:	2300      	movs	r3, #0
 800077e:	60bb      	str	r3, [r7, #8]
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	791b      	ldrb	r3, [r3, #4]
 8000784:	08db      	lsrs	r3, r3, #3
 8000786:	b2db      	uxtb	r3, r3
 8000788:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	791b      	ldrb	r3, [r3, #4]
 800078e:	f003 0307 	and.w	r3, r3, #7
 8000792:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4* temp2));
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	68fa      	ldr	r2, [r7, #12]
 800079a:	3208      	adds	r2, #8
 800079c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007a0:	68bb      	ldr	r3, [r7, #8]
 80007a2:	009b      	lsls	r3, r3, #2
 80007a4:	210f      	movs	r1, #15
 80007a6:	fa01 f303 	lsl.w	r3, r1, r3
 80007aa:	43db      	mvns	r3, r3
 80007ac:	4619      	mov	r1, r3
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	4011      	ands	r1, r2
 80007b4:	68fa      	ldr	r2, [r7, #12]
 80007b6:	3208      	adds	r2, #8
 80007b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4* temp2)); //alt function low
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	68fa      	ldr	r2, [r7, #12]
 80007c2:	3208      	adds	r2, #8
 80007c4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	7a5b      	ldrb	r3, [r3, #9]
 80007cc:	4619      	mov	r1, r3
 80007ce:	68bb      	ldr	r3, [r7, #8]
 80007d0:	009b      	lsls	r3, r3, #2
 80007d2:	fa01 f303 	lsl.w	r3, r1, r3
 80007d6:	4619      	mov	r1, r3
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	4311      	orrs	r1, r2
 80007de:	68fa      	ldr	r2, [r7, #12]
 80007e0:	3208      	adds	r2, #8
 80007e2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007e6:	bf00      	nop
 80007e8:	371c      	adds	r7, #28
 80007ea:	46bd      	mov	sp, r7
 80007ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f0:	4770      	bx	lr
 80007f2:	bf00      	nop
 80007f4:	40013800 	.word	0x40013800
 80007f8:	40013c00 	.word	0x40013c00

080007fc <GPIO_WriteToOutputPin>:
 * @return            - 0 or 1
 *
 * @Note              -
 ***********************************************************************/

void GPIO_WriteToOutputPin(GPIO_Regdef_t *pGPIOx, uint8_t PinNumber, uint8_t value){
 80007fc:	b480      	push	{r7}
 80007fe:	b083      	sub	sp, #12
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
 8000804:	460b      	mov	r3, r1
 8000806:	70fb      	strb	r3, [r7, #3]
 8000808:	4613      	mov	r3, r2
 800080a:	70bb      	strb	r3, [r7, #2]
	if(value == SET){
 800080c:	78bb      	ldrb	r3, [r7, #2]
 800080e:	2b01      	cmp	r3, #1
 8000810:	d109      	bne.n	8000826 <GPIO_WriteToOutputPin+0x2a>
		pGPIOx->ODR |= (1 << PinNumber);
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	695b      	ldr	r3, [r3, #20]
 8000816:	78fa      	ldrb	r2, [r7, #3]
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	431a      	orrs	r2, r3
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	615a      	str	r2, [r3, #20]
	} else{
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 8000824:	e009      	b.n	800083a <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	695b      	ldr	r3, [r3, #20]
 800082a:	78fa      	ldrb	r2, [r7, #3]
 800082c:	2101      	movs	r1, #1
 800082e:	fa01 f202 	lsl.w	r2, r1, r2
 8000832:	43d2      	mvns	r2, r2
 8000834:	401a      	ands	r2, r3
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	615a      	str	r2, [r3, #20]
}
 800083a:	bf00      	nop
 800083c:	370c      	adds	r7, #12
 800083e:	46bd      	mov	sp, r7
 8000840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000844:	4770      	bx	lr
	...

08000848 <GPIO_IRQInterruptConfig>:
 * @return            - 0 or 1
 *
 * @Note              -
 ***********************************************************************/

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t ENorDI) {
 8000848:	b480      	push	{r7}
 800084a:	b083      	sub	sp, #12
 800084c:	af00      	add	r7, sp, #0
 800084e:	4603      	mov	r3, r0
 8000850:	460a      	mov	r2, r1
 8000852:	71fb      	strb	r3, [r7, #7]
 8000854:	4613      	mov	r3, r2
 8000856:	71bb      	strb	r3, [r7, #6]
	if(ENorDI == ENABLE){
 8000858:	79bb      	ldrb	r3, [r7, #6]
 800085a:	2b01      	cmp	r3, #1
 800085c:	d133      	bne.n	80008c6 <GPIO_IRQInterruptConfig+0x7e>
		if(IRQNumber <= 31){
 800085e:	79fb      	ldrb	r3, [r7, #7]
 8000860:	2b1f      	cmp	r3, #31
 8000862:	d80a      	bhi.n	800087a <GPIO_IRQInterruptConfig+0x32>
			// program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000864:	4b35      	ldr	r3, [pc, #212]	; (800093c <GPIO_IRQInterruptConfig+0xf4>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	79fa      	ldrb	r2, [r7, #7]
 800086a:	2101      	movs	r1, #1
 800086c:	fa01 f202 	lsl.w	r2, r1, r2
 8000870:	4611      	mov	r1, r2
 8000872:	4a32      	ldr	r2, [pc, #200]	; (800093c <GPIO_IRQInterruptConfig+0xf4>)
 8000874:	430b      	orrs	r3, r1
 8000876:	6013      	str	r3, [r2, #0]
		} else if(IRQNumber >= 64 && IRQNumber < 95){
			// program ICER2 register
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
		}
	}
}
 8000878:	e059      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber > 31 && IRQNumber < 64){
 800087a:	79fb      	ldrb	r3, [r7, #7]
 800087c:	2b1f      	cmp	r3, #31
 800087e:	d90f      	bls.n	80008a0 <GPIO_IRQInterruptConfig+0x58>
 8000880:	79fb      	ldrb	r3, [r7, #7]
 8000882:	2b3f      	cmp	r3, #63	; 0x3f
 8000884:	d80c      	bhi.n	80008a0 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << IRQNumber % 32);
 8000886:	4b2e      	ldr	r3, [pc, #184]	; (8000940 <GPIO_IRQInterruptConfig+0xf8>)
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	79fa      	ldrb	r2, [r7, #7]
 800088c:	f002 021f 	and.w	r2, r2, #31
 8000890:	2101      	movs	r1, #1
 8000892:	fa01 f202 	lsl.w	r2, r1, r2
 8000896:	4611      	mov	r1, r2
 8000898:	4a29      	ldr	r2, [pc, #164]	; (8000940 <GPIO_IRQInterruptConfig+0xf8>)
 800089a:	430b      	orrs	r3, r1
 800089c:	6013      	str	r3, [r2, #0]
 800089e:	e046      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber >= 64 && IRQNumber < 95){
 80008a0:	79fb      	ldrb	r3, [r7, #7]
 80008a2:	2b3f      	cmp	r3, #63	; 0x3f
 80008a4:	d943      	bls.n	800092e <GPIO_IRQInterruptConfig+0xe6>
 80008a6:	79fb      	ldrb	r3, [r7, #7]
 80008a8:	2b5e      	cmp	r3, #94	; 0x5e
 80008aa:	d840      	bhi.n	800092e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << IRQNumber % 64);
 80008ac:	4b25      	ldr	r3, [pc, #148]	; (8000944 <GPIO_IRQInterruptConfig+0xfc>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	79fa      	ldrb	r2, [r7, #7]
 80008b2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008b6:	2101      	movs	r1, #1
 80008b8:	fa01 f202 	lsl.w	r2, r1, r2
 80008bc:	4611      	mov	r1, r2
 80008be:	4a21      	ldr	r2, [pc, #132]	; (8000944 <GPIO_IRQInterruptConfig+0xfc>)
 80008c0:	430b      	orrs	r3, r1
 80008c2:	6013      	str	r3, [r2, #0]
}
 80008c4:	e033      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31){
 80008c6:	79fb      	ldrb	r3, [r7, #7]
 80008c8:	2b1f      	cmp	r3, #31
 80008ca:	d80a      	bhi.n	80008e2 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008cc:	4b1e      	ldr	r3, [pc, #120]	; (8000948 <GPIO_IRQInterruptConfig+0x100>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	79fa      	ldrb	r2, [r7, #7]
 80008d2:	2101      	movs	r1, #1
 80008d4:	fa01 f202 	lsl.w	r2, r1, r2
 80008d8:	4611      	mov	r1, r2
 80008da:	4a1b      	ldr	r2, [pc, #108]	; (8000948 <GPIO_IRQInterruptConfig+0x100>)
 80008dc:	430b      	orrs	r3, r1
 80008de:	6013      	str	r3, [r2, #0]
}
 80008e0:	e025      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber > 31 && IRQNumber < 64){
 80008e2:	79fb      	ldrb	r3, [r7, #7]
 80008e4:	2b1f      	cmp	r3, #31
 80008e6:	d90f      	bls.n	8000908 <GPIO_IRQInterruptConfig+0xc0>
 80008e8:	79fb      	ldrb	r3, [r7, #7]
 80008ea:	2b3f      	cmp	r3, #63	; 0x3f
 80008ec:	d80c      	bhi.n	8000908 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << IRQNumber % 32);
 80008ee:	4b14      	ldr	r3, [pc, #80]	; (8000940 <GPIO_IRQInterruptConfig+0xf8>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	79fa      	ldrb	r2, [r7, #7]
 80008f4:	f002 021f 	and.w	r2, r2, #31
 80008f8:	2101      	movs	r1, #1
 80008fa:	fa01 f202 	lsl.w	r2, r1, r2
 80008fe:	4611      	mov	r1, r2
 8000900:	4a0f      	ldr	r2, [pc, #60]	; (8000940 <GPIO_IRQInterruptConfig+0xf8>)
 8000902:	430b      	orrs	r3, r1
 8000904:	6013      	str	r3, [r2, #0]
 8000906:	e012      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
		} else if(IRQNumber >= 64 && IRQNumber < 95){
 8000908:	79fb      	ldrb	r3, [r7, #7]
 800090a:	2b3f      	cmp	r3, #63	; 0x3f
 800090c:	d90f      	bls.n	800092e <GPIO_IRQInterruptConfig+0xe6>
 800090e:	79fb      	ldrb	r3, [r7, #7]
 8000910:	2b5e      	cmp	r3, #94	; 0x5e
 8000912:	d80c      	bhi.n	800092e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << IRQNumber % 64);
 8000914:	4b0b      	ldr	r3, [pc, #44]	; (8000944 <GPIO_IRQInterruptConfig+0xfc>)
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	79fa      	ldrb	r2, [r7, #7]
 800091a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800091e:	2101      	movs	r1, #1
 8000920:	fa01 f202 	lsl.w	r2, r1, r2
 8000924:	4611      	mov	r1, r2
 8000926:	4a07      	ldr	r2, [pc, #28]	; (8000944 <GPIO_IRQInterruptConfig+0xfc>)
 8000928:	430b      	orrs	r3, r1
 800092a:	6013      	str	r3, [r2, #0]
}
 800092c:	e7ff      	b.n	800092e <GPIO_IRQInterruptConfig+0xe6>
 800092e:	bf00      	nop
 8000930:	370c      	adds	r7, #12
 8000932:	46bd      	mov	sp, r7
 8000934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000938:	4770      	bx	lr
 800093a:	bf00      	nop
 800093c:	e000e100 	.word	0xe000e100
 8000940:	e000e104 	.word	0xe000e104
 8000944:	e000e108 	.word	0xe000e108
 8000948:	e000e180 	.word	0xe000e180

0800094c <GPIO_ITQPriorityConfig>:
 * @return            - 0 or 1
 *
 * @Note              -
 ***********************************************************************/

void GPIO_ITQPriorityConfig(uint8_t IRQNumber, uint8_t IRQPriority){
 800094c:	b480      	push	{r7}
 800094e:	b085      	sub	sp, #20
 8000950:	af00      	add	r7, sp, #0
 8000952:	4603      	mov	r3, r0
 8000954:	460a      	mov	r2, r1
 8000956:	71fb      	strb	r3, [r7, #7]
 8000958:	4613      	mov	r3, r2
 800095a:	71bb      	strb	r3, [r7, #6]
	// 1. Find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 800095c:	79fb      	ldrb	r3, [r7, #7]
 800095e:	089b      	lsrs	r3, r3, #2
 8000960:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000962:	79fb      	ldrb	r3, [r7, #7]
 8000964:	f003 0303 	and.w	r3, r3, #3
 8000968:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (iprx_section * 8) + (8 - NO_PR_BITS_IMPLEMENTED);
 800096a:	7bbb      	ldrb	r3, [r7, #14]
 800096c:	00db      	lsls	r3, r3, #3
 800096e:	b2db      	uxtb	r3, r3
 8000970:	3304      	adds	r3, #4
 8000972:	737b      	strb	r3, [r7, #13]
	*(NVIC_IPR + iprx) |= (IRQPriority << shift_amount);
 8000974:	7bfb      	ldrb	r3, [r7, #15]
 8000976:	009b      	lsls	r3, r3, #2
 8000978:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800097c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000980:	681a      	ldr	r2, [r3, #0]
 8000982:	79b9      	ldrb	r1, [r7, #6]
 8000984:	7b7b      	ldrb	r3, [r7, #13]
 8000986:	fa01 f303 	lsl.w	r3, r1, r3
 800098a:	4619      	mov	r1, r3
 800098c:	7bfb      	ldrb	r3, [r7, #15]
 800098e:	009b      	lsls	r3, r3, #2
 8000990:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000994:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000998:	430a      	orrs	r2, r1
 800099a:	601a      	str	r2, [r3, #0]
}
 800099c:	bf00      	nop
 800099e:	3714      	adds	r7, #20
 80009a0:	46bd      	mov	sp, r7
 80009a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a6:	4770      	bx	lr

080009a8 <GPIO_IRQHandling>:
 * @return            - 0 or 1
 *
 * @Note              -
 ***********************************************************************/

void GPIO_IRQHandling(uint8_t PinNumber){
 80009a8:	b480      	push	{r7}
 80009aa:	b083      	sub	sp, #12
 80009ac:	af00      	add	r7, sp, #0
 80009ae:	4603      	mov	r3, r0
 80009b0:	71fb      	strb	r3, [r7, #7]
	// claer the exti_pr register corresponding to pin number
	if(EXTI->PR & (1 << PinNumber)){
 80009b2:	4b0c      	ldr	r3, [pc, #48]	; (80009e4 <GPIO_IRQHandling+0x3c>)
 80009b4:	695b      	ldr	r3, [r3, #20]
 80009b6:	79fa      	ldrb	r2, [r7, #7]
 80009b8:	2101      	movs	r1, #1
 80009ba:	fa01 f202 	lsl.w	r2, r1, r2
 80009be:	4013      	ands	r3, r2
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d009      	beq.n	80009d8 <GPIO_IRQHandling+0x30>
		EXTI->PR |= (1 << PinNumber);
 80009c4:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <GPIO_IRQHandling+0x3c>)
 80009c6:	695b      	ldr	r3, [r3, #20]
 80009c8:	79fa      	ldrb	r2, [r7, #7]
 80009ca:	2101      	movs	r1, #1
 80009cc:	fa01 f202 	lsl.w	r2, r1, r2
 80009d0:	4611      	mov	r1, r2
 80009d2:	4a04      	ldr	r2, [pc, #16]	; (80009e4 <GPIO_IRQHandling+0x3c>)
 80009d4:	430b      	orrs	r3, r1
 80009d6:	6153      	str	r3, [r2, #20]
	}
}
 80009d8:	bf00      	nop
 80009da:	370c      	adds	r7, #12
 80009dc:	46bd      	mov	sp, r7
 80009de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009e2:	4770      	bx	lr
 80009e4:	40013c00 	.word	0x40013c00

080009e8 <__libc_init_array>:
 80009e8:	b570      	push	{r4, r5, r6, lr}
 80009ea:	4e0d      	ldr	r6, [pc, #52]	; (8000a20 <__libc_init_array+0x38>)
 80009ec:	4c0d      	ldr	r4, [pc, #52]	; (8000a24 <__libc_init_array+0x3c>)
 80009ee:	1ba4      	subs	r4, r4, r6
 80009f0:	10a4      	asrs	r4, r4, #2
 80009f2:	2500      	movs	r5, #0
 80009f4:	42a5      	cmp	r5, r4
 80009f6:	d109      	bne.n	8000a0c <__libc_init_array+0x24>
 80009f8:	4e0b      	ldr	r6, [pc, #44]	; (8000a28 <__libc_init_array+0x40>)
 80009fa:	4c0c      	ldr	r4, [pc, #48]	; (8000a2c <__libc_init_array+0x44>)
 80009fc:	f000 f820 	bl	8000a40 <_init>
 8000a00:	1ba4      	subs	r4, r4, r6
 8000a02:	10a4      	asrs	r4, r4, #2
 8000a04:	2500      	movs	r5, #0
 8000a06:	42a5      	cmp	r5, r4
 8000a08:	d105      	bne.n	8000a16 <__libc_init_array+0x2e>
 8000a0a:	bd70      	pop	{r4, r5, r6, pc}
 8000a0c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a10:	4798      	blx	r3
 8000a12:	3501      	adds	r5, #1
 8000a14:	e7ee      	b.n	80009f4 <__libc_init_array+0xc>
 8000a16:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a1a:	4798      	blx	r3
 8000a1c:	3501      	adds	r5, #1
 8000a1e:	e7f2      	b.n	8000a06 <__libc_init_array+0x1e>
 8000a20:	08000a58 	.word	0x08000a58
 8000a24:	08000a58 	.word	0x08000a58
 8000a28:	08000a58 	.word	0x08000a58
 8000a2c:	08000a5c 	.word	0x08000a5c

08000a30 <memset>:
 8000a30:	4402      	add	r2, r0
 8000a32:	4603      	mov	r3, r0
 8000a34:	4293      	cmp	r3, r2
 8000a36:	d100      	bne.n	8000a3a <memset+0xa>
 8000a38:	4770      	bx	lr
 8000a3a:	f803 1b01 	strb.w	r1, [r3], #1
 8000a3e:	e7f9      	b.n	8000a34 <memset+0x4>

08000a40 <_init>:
 8000a40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a42:	bf00      	nop
 8000a44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a46:	bc08      	pop	{r3}
 8000a48:	469e      	mov	lr, r3
 8000a4a:	4770      	bx	lr

08000a4c <_fini>:
 8000a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4e:	bf00      	nop
 8000a50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a52:	bc08      	pop	{r3}
 8000a54:	469e      	mov	lr, r3
 8000a56:	4770      	bx	lr
